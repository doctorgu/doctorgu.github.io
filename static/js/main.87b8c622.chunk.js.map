{"version":3,"sources":["pages/database/db-diagram/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DbDiagram","useState","src","setSrc","dest","setDest","direction","href","rel","target","TextArea","value","onChange","e","style","width","height","onClick","rForeign","RegExp","replace","match","col1","tbl","col2","col1s","split","col2s","replaceForDbDiagram","App","className","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuDeA,EApDiB,WAAO,IAAD,EACdC,mBAAS,IADK,mBAC7BC,EAD6B,KACxBC,EADwB,OAEZF,mBAAS,IAFG,mBAE7BG,EAF6B,KAEvBC,EAFuB,KA2BpC,OACE,mCACE,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACE,kDACkB,IAChB,mBAAGC,KAAK,uBAAuBC,IAAI,aAAaC,OAAO,SAAvD,6BAIF,cAAC,IAAMC,SAAP,CACEC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAOU,EAAEJ,OAAOE,QACjCG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAElC,cAAC,IAAD,CAAQC,QAnBS,WACrB,IAAMN,EAnBoB,SAACA,GAC3B,IAKMO,EAAW,IAAIC,OAJnB,+FAImC,KAErC,OAAOR,EACJS,QAAQ,mBAAoB,4BAC5BA,QAAQ,QAAS,QACjBA,QAAQF,GAAU,SAACG,EAAOC,EAAMC,EAAKC,GACpC,IAAMC,EAAQH,EAAKI,MAAM,KACnBC,EAAQH,EAAKE,MAAM,KACzB,MAAM,gBAAN,OAAuBD,EAAM,GAA7B,wBAA+CF,EAA/C,aAAuDI,EAAM,GAA7D,QAKUC,CAAoB1B,GAClCG,EAAQM,IAiBJ,qBACA,cAAC,IAAMD,SAAP,CACEC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAQQ,EAAEJ,OAAOE,QAClCG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,iB,OCnB3Ba,MAxBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,gCACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,uBAAT,4BAIJ,uBAEA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,uBAAlB,SACE,cAAC,EAAD,gBCNCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.87b8c622.chunk.js","sourcesContent":["import { Button, Form, Input, Space } from \"antd\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nconst DbDiagram: React.FC<{}> = () => {\r\n  const [src, setSrc] = useState(\"\");\r\n  const [dest, setDest] = useState(\"\");\r\n\r\n  const replaceForDbDiagram = (value: string) => {\r\n    const foreign =\r\n      \"foreign\\\\s+key\\\\s*\" +\r\n      \"\\\\((?<col1>[^)]+)\\\\)\" +\r\n      \"\\\\s+references\\\\s+(?<tbl>\\\\w+)\\\\s*\" +\r\n      \"\\\\((?<col2>[^)]+)\\\\)\";\r\n    const rForeign = new RegExp(foreign, \"g\");\r\n\r\n    return value\r\n      .replace(/\\btimestamptz\\b/g, \"timestamp with time zone\")\r\n      .replace(/ is /g, \" IS \")\r\n      .replace(rForeign, (match, col1, tbl, col2) => {\r\n        const col1s = col1.split(\",\");\r\n        const col2s = col2.split(\",\");\r\n        return `foreign key (${col1s[0]}) references ${tbl} (${col2s[0]})`;\r\n      });\r\n  };\r\n\r\n  const convertOnClick = () => {\r\n    const value = replaceForDbDiagram(src);\r\n    setDest(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Space direction=\"vertical\">\r\n        <div>\r\n          Convert DDL for{\" \"}\r\n          <a href=\"https://dbdiagram.io\" rel=\"noreferrer\" target=\"_blank\">\r\n            dbdiagram.io\r\n          </a>\r\n        </div>\r\n        <Input.TextArea\r\n          value={src}\r\n          onChange={(e) => setSrc(e.target.value)}\r\n          style={{ width: \"100%\", height: \"200px\" }}\r\n        />\r\n        <Button onClick={convertOnClick}>Convert</Button>\r\n        <Input.TextArea\r\n          value={dest}\r\n          onChange={(e) => setDest(e.target.value)}\r\n          style={{ width: \"100%\", height: \"200px\" }}\r\n        />\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DbDiagram;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport DbDiagram from \"./pages/database/db-diagram\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/database/db-diagram\">DB Diagram</Link>\n            </li>\n          </ul>\n\n          <hr />\n\n          <Switch>\n            <Route exact path=\"/database/db-diagram\">\n              <DbDiagram />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}